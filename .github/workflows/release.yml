name: Release Packages

on:
  push:
    branches:
      - "master"
    paths:
      - "packages/*/package.json"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        name:
          - "template"
      fail-fast: false
    defaults:
      run:
        working-directory: packages/${{ matrix.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
      - name: Define package dir path.
        id: path_dir
        run: echo "path=packages/${{ matrix.name }}" >> "$GITHUB_OUTPUT"
      - name: Define package config path
        id: path_config
        run: echo "path=${{ steps.path_dir.outputs.path }}/package.json" >> "$GITHUB_OUTPUT"
      - name: Validate package config exits
        id: config_exists
        run: |
          exists=false
          if [ -f "${{ steps.path_config.outputs.path }}" ]; then
            exists=true
          fi
          echo "exists=${exists}" >> "$GITHUB_OUTPUT"
      - name: Validate package version got updated
        if: ${{ steps.config_exists.outputs.exists }} == 'true'
        id: check_version
        uses: EndBug/version-check@v2.1.4
        with:
          diff-search: true
          file-name: ${{ steps.path_config.outputs.path }}
      - name: Get initial package info
        if: steps.check_version.outputs.changed == 'true'
        id: package_initial_info
        run: |
          echo "name=$(jq -r .name package.json)" >> "$GITHUB_OUTPUT"
          echo "version=$(jq -r .version package.json)" >> "$GITHUB_OUTPUT"
      - name: Define formatted package info
        if: steps.check_version.outputs.changed == 'true'
        id: package_formatted_info
        run: |
          echo "name=$(echo "${{ steps.package_initial_info.outputs.name }}" | sed "s/@rbxts\///" | sed -E "s/(^|-)([a-z])/\U\2/g")" >> "$GITHUB_OUTPUT"
      - name: Install pnpm
        if: steps.check_version.outputs.changed == 'true'
        uses: pnpm/action-setup@v4.0.0
        with:
          run_install: false
      - name: Setup node
        if: steps.check_version.outputs.changed == 'true'
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 22
          cache: pnpm
      - name: Install dependencies
        if: steps.check_version.outputs.changed == 'true'
        run: pnpm install
      - name: Build package
        if: steps.check_version.outputs.changed == 'true'
        run: pnpm run build
      - name: Release to registry
        if: steps.check_version.outputs.changed == 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "noreply@github.com"
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          pnpm publish --ignore-scripts --no-git-checks
      - name: Create GitHub tag
        if: steps.check_version.outputs.changed == 'true'
        id: github_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: "@${{ steps.package_initial_info.outputs.version }}"
          tag_prefix: ${{ steps.package_formatted_info.outputs.name }}
      - name: Release to GitHub
        if: steps.check_version.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2.0.8
        with:
          name: ${{ steps.package_formatted_info.outputs.name }} v${{ steps.package_initial_info.outputs.version }}
          tag_name: ${{ steps.github_tag.outputs.new_tag }}
          generate_release_notes: true
          make_latest: true
